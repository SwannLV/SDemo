{"ts":1351791561436,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1351791570093,"patch":[[{"diffs":[[1,"\r\nfunction BufferLoader(context, urlList, callback) {\r\n    this.context = context;\r\n    this.urlList = urlList;\r\n    this.onload = callback;\r\n    this.bufferList = new Array();\r\n    this.loadCount = 0;\r\n}\r\n\r\nBufferLoader.prototype.loadBuffer = function(url, index) {\r\n    // Load buffer asynchronously\r\n    var request = new XMLHttpRequest();\r\n    request.open(\"GET\", url, true);\r\n    request.responseType = \"arraybuffer\";\r\n\r\n    var loader = this;\r\n\r\n    request.onload = function() {\r\n        var buffer;\r\n        try {\r\n            buffer = loader.context.createBuffer(request.response, false);\r\n        } catch(e) {\r\n            alert('error decoding file data: ' + url);\r\n        }\r\n\r\n        try {\r\n            loader.bufferList[index] = buffer;\r\n            if (++loader.loadCount == loader.urlList.length)\r\n                loader.onload(loader.bufferList);\r\n        } catch(e) {\r\n            alert('BufferLoader: callback problem');\r\n        }\r\n    }\r\n\r\n    request.onerror = function() {\r\n        alert('BufferLoader: XHR error');        \r\n    }\r\n\r\n    request.send();\r\n}\r\n\r\nBufferLoader.prototype.load = function() {\r\n    for (var i = 0; i < this.urlList.length; ++i)\r\n        this.loadBuffer(this.urlList[i], i);\r\n}"]],"start1":0,"start2":0,"length1":0,"length2":1226}]],"length":1226,"saved":false}
