{"ts":1354779767085,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1354779769238,"patch":[[{"diffs":[[1,"var LoopVisualizer = (function() {\r\n\r\n    var RINGCOUNT = 160;\r\n\tvar SEPARATION = 30;\r\n\tvar INIT_RADIUS = 50;\r\n\tvar SEGMENTS = 256;\r\n\tvar VOL_SENS = 2;\r\n\r\n\tvar rings = [];\r\n\tvar geoms = [];\r\n\tvar materials = [];\r\n\tvar levels = [];\r\n\tvar waves = [];\r\n\tvar colors = [];\r\n\tvar loopHolder = new THREE.Object3D();\r\n\tvar perlin = new ImprovedNoise();\r\n\tvar noisePos = 0;\r\n\tvar freqByteData;\r\n\tvar timeByteData;\r\n\r\n\r\n\tfunction init() {\r\n\r\n\t\trings = [];\r\n\t\tgeoms = [];\r\n\t\tmaterials = [];\r\n\t\tlevels = [];\r\n\t\twaves = [];\r\n\t\tcolors = [];\r\n\r\n\t\t////////INIT audio in\r\n\t\tfreqByteData = new Uint8Array(analyser.frequencyBinCount);\r\n\t\ttimeByteData = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n\t\tscene.add(loopHolder);\r\n\r\n\t\tvar scale = 1;\r\n\t\tvar alt = 0;\r\n\r\n\t\tvar emptyBinData = [];\r\n\t\tfor(var j = 0; j < SEGMENTS; j++) {\r\n\t\t\temptyBinData.push(0);\r\n\t\t}\r\n\r\n\t\tvar arcShape = new THREE.Shape();\r\n\t\tarcShape.moveTo( 0, 0 );\r\n\t\tarcShape.arc( 0, 0, INIT_RADIUS, 0, Math.PI*2, false );\r\n\r\n\t\t//create rings\r\n\t\tfor(var i = 0; i < RINGCOUNT; i++) {\r\n\r\n\t\t\tvar m = new THREE.LineBasicMaterial( { color: 0xffffff,\r\n\t\t\t\tlinewidth: 1 ,\r\n\t\t\t\topacity : 0.7,\r\n\t\t\t\tblending : THREE.AdditiveBlending,\r\n\t\t\t\tdepthTest : false,\r\n\t\t\t\ttransparent : true\r\n\r\n\t\t\t});\r\n\t\t\tvar circlePoints = arcShape.createPointsGeometry(128);\r\n\t\t\tvar line = new THREE.Line( circlePoints, m);\r\n\r\n\t\t\trings.push(line);\r\n\t\t\tgeoms.push(circlePoints);\r\n\t\t\tmaterials.push(m);\r\n\t\t\tscale *= 1.05;\r\n\t\t\tline.scale.x = scale;\r\n\t\t\tline.scale.y = scale;\r\n\r\n\t\t\tloopHolder.add(line);\r\n\r\n\t\t\tlevels.push(0);\r\n\t\t\twaves.push(emptyBinData);\r\n\t\t\tcolors.push(0);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction remove() {\r\n\r\n\t\tif (loopHolder){\r\n\t\t\tfor(var i = 0; i < RINGCOUNT; i++) {\r\n\t\t\t\tloopHolder.remove(rings[i]);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tfunction update() {\r\n\r\n\t\tanalyser.smoothingTimeConstant = 0.1;\r\n\t\tanalyser.getByteFrequencyData(freqByteData);\r\n\t\tanalyser.getByteTimeDomainData(timeByteData);\r\n\r\n\t\t//get average level\r\n\t\tvar length = freqByteData.length;\r\n\t\tvar sum = 0;\r\n\t\tfor(var j = 0; j < length; ++j) {\r\n\t\t\tsum += freqByteData[j];\r\n\t\t}\r\n\t\tvar aveLevel = sum / length;\r\n\t\tvar scaled_average = (aveLevel / 256) * VOL_SENS; //256 the highest a level can be?\r\n\r\n\t\t//get noise color posn\r\n\t\tnoisePos += 0.005;\r\n\t\tvar n = Math.abs(perlin.noise(noisePos, 0, 0));\r\n\r\n\t\tlevels.push(scaled_average);\r\n\t\t//levels.push(binData);\r\n\t\twaves.push(timeByteData);\r\n\t\tcolors.push(n);\r\n\r\n\t\tlevels.shift(1);\r\n\t\twaves.shift(1);\r\n\t\tcolors.shift(1);\r\n\r\n\t\tfor(var ii = 0; ii < RINGCOUNT ; ii++) {\r\n\r\n\t\t\tvar ringId = RINGCOUNT - ii - 1;\r\n\r\n\t\t\tfor(var jj = 0; jj < SEGMENTS; jj++) {\r\n\t\t\t\tgeoms[ii].vertices[jj].position.z = (waves[ringId][jj])*2;\r\n\t\t\t}\r\n\r\n\t\t\t//link up last segment\r\n\t\t\tgeoms[ii].vertices[SEGMENTS].position.z = geoms[ii].vertices[0].position.z;\r\n\r\n\t\t\tvar normLevel = levels[ringId];\r\n\t\t\tvar hue = colors[ringId];\r\n\r\n\t\t\tmaterials[ii].color.setHSV(hue, 1, normLevel);\r\n\t\t\tmaterials[ii].linewidth =normLevel*3;\r\n\t\t\tmaterials[ii].opacity = normLevel ;\r\n\t\t\tgeoms[ii].__dirtyVertices = true;\r\n\t\t\tgeoms[ii].__dirtyColors = true;\r\n\t\t\trings[ii].scale.z = normLevel;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tinit:init,\r\n\t\tupdate:update,\r\n\t\tremove:remove,\r\n\t\tloopHolder:loopHolder\r\n\t};\r\n\t}());"]],"start1":0,"start2":0,"length1":0,"length2":3167}]],"length":3167,"saved":false}
{"contributors":[],"silentsave":false,"ts":1354780778233,"patch":[[{"diffs":[[0,"ces[jj]."],[-1,"position."],[0,"z = (wav"]],"start1":2585,"start2":2585,"length1":25,"length2":16}]],"length":3158,"saved":false}
{"ts":1354780859115,"patch":[[{"diffs":[[0,"[0]."],[-1,"position."],[0,"z;\r\n"]],"start1":2710,"start2":2710,"length1":17,"length2":8}]],"length":3140,"saved":false}
{"ts":1354781225526,"patch":[[{"diffs":[[0,"ces[jj]."],[1,"position."],[0,"z = (wav"]],"start1":2585,"start2":2585,"length1":16,"length2":25},{"diffs":[[0,"GMENTS]."],[1,"position."],[0,"z = geom"]],"start1":2689,"start2":2689,"length1":16,"length2":25},{"diffs":[[0,"ices[0]."],[1,"position."],[0,"z;\r\n\r\n\t\t"]],"start1":2724,"start2":2724,"length1":16,"length2":25}]],"length":3167,"saved":false}
{"ts":1354781274390,"patch":[[{"diffs":[[0,"ces[jj]."],[-1,"position."],[0,"z = (wav"]],"start1":2585,"start2":2585,"length1":25,"length2":16}]],"length":3158,"saved":false}
{"ts":1354781398377,"patch":[[{"diffs":[[0,"GMENTS]."],[-1,"position."],[0,"z = geom"]],"start1":2680,"start2":2680,"length1":25,"length2":16},{"diffs":[[0,"[0]."],[-1,"position."],[0,"z;\r\n"]],"start1":2710,"start2":2710,"length1":17,"length2":8}]],"length":3140,"saved":false}
{"ts":1354782771319,"patch":[[{"diffs":[[0,"TION = 3"],[-1,"0"],[0,";\r\n\tvar "]],"start1":75,"start2":75,"length1":17,"length2":16},{"diffs":[[0,"y : "],[-1,"0.7"],[1,"1.0"],[0,",\r\n\t"]],"start1":1118,"start2":1118,"length1":11,"length2":11}]],"length":3139,"saved":false}
{"ts":1354782890015,"patch":[[{"diffs":[[0,", 0));\r\n\r\n\t\t"],[1,"//"],[0,"levels.push("]],"start1":2257,"start2":2257,"length1":24,"length2":26},{"diffs":[[0,"verage);\r\n\t\t"],[-1,"//"],[0,"levels.push("]],"start1":2291,"start2":2291,"length1":26,"length2":24}]],"length":3139,"saved":false}
{"ts":1354782975866,"patch":[[{"diffs":[[0,");\r\n\r\n\t\t"],[-1,"//"],[0,"levels.p"]],"start1":2261,"start2":2261,"length1":18,"length2":16},{"diffs":[[0,");\r\n"],[-1,"\t\tlevels.push(binData);\r\n"],[0,"\t\twa"]],"start1":2295,"start2":2295,"length1":33,"length2":8}]],"length":3112,"saved":false}
{"ts":1354783076058,"patch":[[{"diffs":[[0,"SENS = 2"],[1,"00"],[0,";\r\n\r\n\tva"]],"start1":141,"start2":141,"length1":16,"length2":18}]],"length":3114,"saved":false}
{"ts":1354783293325,"patch":[[{"diffs":[[0,"_SENS = "],[-1,"2"],[1,"1"],[0,"00;\r\n\r\n\t"]],"start1":140,"start2":140,"length1":17,"length2":17},{"diffs":[[0,"acity : "],[-1,"1.0"],[1,"0.7"],[0,",\r\n\t\t\t\tb"]],"start1":1116,"start2":1116,"length1":19,"length2":19}]],"length":3114,"saved":false}
{"ts":1354783322041,"patch":[[{"diffs":[[0,"S = "],[-1,"10"],[1,"5"],[0,"0;\r\n"]],"start1":144,"start2":144,"length1":10,"length2":9}]],"length":3113,"saved":false}
{"ts":1354783374040,"patch":[[{"diffs":[[0," VOL_SENS = "],[-1,"5"],[1,"2"],[0,"0;\r\n\r\n\tvar r"]],"start1":136,"start2":136,"length1":25,"length2":25}]],"length":3113,"saved":false}
{"ts":1354784884897,"patch":[[{"diffs":[[0,"j])*2;\r\n"],[1,"                if (waves[ringId][jj] != 128){\r\n                 int uuu = 112;   \r\n                }\r\n                }\r\n"],[0,"\t\t\t}\r\n\r\n"]],"start1":2586,"start2":2586,"length1":16,"length2":138}]],"length":3235,"saved":false}
{"ts":1354784999150,"patch":[[{"diffs":[[0,"        "],[-1,"int"],[1,"var"],[0," uuu = 1"]],"start1":2651,"start2":2651,"length1":19,"length2":19}]],"length":3235,"saved":false}
{"ts":1354785038630,"patch":[[{"diffs":[[0,"     }\r\n"],[-1,"                }\r\n"],[0,"\t\t\t}\r\n\r\n"]],"start1":2689,"start2":2689,"length1":35,"length2":16}]],"length":3216,"saved":false}
{"contributors":[],"silentsave":false,"ts":1354785669609,"patch":[[{"diffs":[[0,"hTest : "],[-1,"fals"],[1,"tru"],[0,"e,\r\n\t\t\t\t"]],"start1":1177,"start2":1177,"length1":20,"length2":19},{"diffs":[[0,"TS]."],[-1,"position."],[0,"z = "]],"start1":2759,"start2":2759,"length1":17,"length2":8}]],"length":3215,"saved":false}
{"ts":1354785754385,"patch":[[{"diffs":[[0,"ADIUS = "],[-1,"5"],[1,"2"],[0,"0;\r\n\tvar"]],"start1":97,"start2":97,"length1":17,"length2":17}]],"length":3215,"saved":false}
{"ts":1354785797628,"patch":[[{"diffs":[[0,"OUNT = 1"],[-1,"6"],[0,"0;\r\n\tvar"]],"start1":51,"start2":51,"length1":17,"length2":16},{"diffs":[[0,"IT_RADIUS = "],[-1,"2"],[1,"5"],[0,"0;\r\n\tvar SEG"]],"start1":92,"start2":92,"length1":25,"length2":25}]],"length":3214,"saved":false}
